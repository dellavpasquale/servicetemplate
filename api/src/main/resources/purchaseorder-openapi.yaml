openapi: 3.0.3
info:
  title: PurchaseOrder API
  description: |-
    This is the API to manage PurchaseOrder objects <br><br>Audience: <i>company-internal</i>
  version: 1.0.0
  x-audience: company-internal
externalDocs:
  description: Find out more about PurchaseOrder component
  url: http://swagger.io
servers:
  - url: https://purchaseorder/api
tags:
  - name: purchaseorder
    description: Everything about PurchaseOrders
paths:
  /purchaseorder:
    post:
      tags:
        - purchaseorder
      summary: Create a new PurchaseOrder
      description: Create a new PurchaseOrder
      operationId: createPurchaseOrder
      requestBody:
        description: Create a new PurchaseOrder
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'    
        '400':
          description: Invalid request supplied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
              examples:
                objectExample:
                  $ref: '#/components/examples/ex1'
        '500':
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
    put:
      tags:
        - purchaseorder
      summary: Update an existing PurchaseOrder
      description: Update an existing PurchaseOrder by Id
      operationId: updatePurchaseOrder
      requestBody:
        description: Update an existing PurchaseOrder
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderUpdateRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'          
        '400':
          description: Invalid request supplied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: PurchaseOrder not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /purchaseorder/{purchaseorderCode}:
    get:
      tags:
        - purchaseorder
      summary: Find a PurchaseOrder
      description: Find a Purchase Order by code
      operationId: getPurchaseOrderByCode
      parameters:
        - name: purchaseorderCode
          in: path
          description: PurchaseOrder code
          required: true
          schema:
            type: string
            minLength: 8
            maxLength: 40
            example: e9dc6700-9842-40db-9e60-9e7044a3791a
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'          
        '400':
          description: Invalid request supplied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '404':
          description: PurchaseOrder not found
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
  /purchaseorder/{purchaseorderCode}/transition:
    post:
      tags:
        - purchaseorder
      summary: Create a new status transition
      description: Create a new status transition
      operationId: createPurchaseOrderTransition
      parameters:
        - name: purchaseorderCode
          in: path
          description: PurchaseOrder code
          required: true
          schema:
            type: string
            minLength: 8
            maxLength: 40
            example: e9dc6700-9842-40db-9e60-9e7044a3791a
      requestBody:
        description: Create a new status transition
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseOrderTransitionRequest'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PurchaseOrder'          
        '400':
          description: Invalid request supplied
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
        '500':
          description: Internal error
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/Problem'
components:
  schemas:
    PurchaseOrderRequest:
      required:
        - customer
      type: object
      properties:
        code:
          type: string
          minLength: 8
          maxLength: 40
          example: e9dc6700-9842-40db-9e60-9e7044a3791a
        customer:
          type: string
          minLength: 2
          maxLength: 56
          example: John Mitch
    PurchaseOrderUpdateRequest:
      required:
        - code
        - product
      type: object
      properties:
        code:
          type: string
          minLength: 8
          maxLength: 40
          example: e9dc6700-9842-40db-9e60-9e7044a3791a
        product:
          type: string
          minLength: 2
          maxLength: 56
          example: Water
        amount:
          type: number
          format: decimal
          example: 99.95
    PurchaseOrderTransitionRequest:
      required:
        - transition
      type: object
      properties:
        transition:
          type: string
          enum: [ORDER, CANCEL, START_TO_WORK, SEND, DELIVER]
          example: SEND
        expectedDeliveryAt:
          type: string
          format: date-time
    PurchaseOrder:
      required:
        - code
        - status
        - customer
      type: object
      properties:
        code:
          type: string
          minLength: 8
          maxLength: 40
          example: e9dc6700-9842-40db-9e60-9e7044a3791a
        status:
          type: string
          enum: [DRAFT, ORDERED, CANCELLED, IN_PROGRESS, SENT, DELIVERED]
          example: DRAFT
        customer:
          type: string
          minLength: 2
          maxLength: 56
          example: John Mitch
        product:
          type: string
          minLength: 2
          maxLength: 56
          example: Water
        amount:
          type: number
          format: decimal
          example: 99.95
        createdAt:
          type: string
          format: date-time
        orderedAt:
          type: string
          format: date-time
        expectedDeliveryAt:
          type: string
          format: date-time
    Problem:
      type: object
      properties:
        type:
          type: string
          format: uri-reference
          description: >
            A URI reference that uniquely identifies the problem type only in the
            context of the provided API. Opposed to the specification in RFC-7807,
            it is neither recommended to be dereferenceable and point to a
            human-readable documentation nor globally unique for the problem type.
          default: 'about:blank'
          example: '/some/uri-reference'
        title:
          type: string
          description: >
            A short summary of the problem type. Written in English and readable
            for engineers, usually not suited for non technical stakeholders and
            not localized.
          example: some title for the error situation
        status:
          type: integer
          format: int32
          description: >
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          minimum: 100
          maximum: 600
          exclusiveMaximum: true
        detail:
          type: string
          description: >
            A human readable explanation specific to this occurrence of the
            problem that is helpful to locate the problem and give advice on how
            to proceed. Written in English and readable for engineers, usually not
            suited for non technical stakeholders and not localized.
          example: some description for the error situation
        instance:
          type: string
          format: uri-reference
          description: >
            A URI reference that identifies the specific occurrence of the problem,
            e.g. by adding a fragment identifier or sub-path to the problem type.
            May be used to locate the root of this problem in the source code.
          example: '/some/uri-reference#specific-occurrence-context'
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
  - BearerAuth: [ ]